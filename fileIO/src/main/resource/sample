//Basic File Info
		try {
			File file = new File("data.txt");
			if (file.exists()) {
				System.out.println("file Exists " );
				System.out.println("AbsolutePath "+file.getAbsolutePath());
				System.out.println("CanonicalPath "+file.getCanonicalPath());
				System.out.println("FreeSpace "+file.getFreeSpace());
				System.out.println("Name "+file.getName());
				System.out.println("Parent "+file.getParent());
				System.out.println("Path "+file.getPath());
				System.out.println("TotalSpace "+file.getTotalSpace());
				System.out.println("Absolute "+file.isAbsolute());
				System.out.println("Directory"+file.isDirectory());
				System.out.println("File     "+file.isFile());
				System.out.println("Hidden   "+file.isHidden());
				
				
			} else {
				file.createNewFile();
			}
			
		} catch (IOException e) {

			e.printStackTrace();
		}
//FileInuptStrea to read(): int
try {
			FileInputStream fis=new FileInputStream("data.txt");
			int data=fis.read();
			while(data!=-1) {
				System.out.print((char)data);
				data=fis.read();
			}
			System.out.println("");
			
		} catch (Exception e) {
			e.printStackTrace();
		}
//BufferedInputStream		
try {
			//This is an exaple of DesignPattern called as Decorator 
			FileInputStream fis=new FileInputStream("data.txt");
			BufferedInputStream buffer=new BufferedInputStream(fis);
			int data=buffer.read();
			while(data!=-1) {
				System.out.print((char)data);
				data=buffer.read();
			}
			System.out.println("");
			
		} catch (Exception e) {
			e.printStackTrace();
		}
//	
try {
	
			FileOutputStream fos=new FileOutputStream("data.txt",true);
			BufferedOutputStream bos=new BufferedOutputStream(fos);
			String wdata="\nThis a new data added run time";
			bos.write(wdata.getBytes());			
			bos.close();
			fos.close();
			
			FileInputStream fis=new FileInputStream("data.txt");
			BufferedInputStream buffer=new BufferedInputStream(fis);
			int data=buffer.read();
			while(data!=-1) {
				System.out.print((char)data);
				data=buffer.read();
			}
			System.out.println("");
			buffer.close();
			fis.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	
		try (FileWriter fw = new FileWriter("cdata.txt", true);
				BufferedWriter bw = new BufferedWriter(fw);
				FileReader fr = new FileReader("cdata.txt");
				BufferedReader br = new BufferedReader(fr)) {

			bw.write("This is character stream demo with your try with resource!");
			bw.write("\n");
			bw.write("This is character stream demo with your try with resource!");
			bw.write("\n");
			bw.write("This is character stream demo with your try with resource!");
			String data=br.readLine();
			while(data!=null) {
				System.out.println(data);
				data=br.readLine();
			}
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	
	final Person person=new Person(1001,"Amit",22);
		
		try(FileOutputStream fos=new FileOutputStream("person.dat",true);
				ObjectOutputStream oos=new ObjectOutputStream(fos);
				FileInputStream fis=new FileInputStream("person.dat");
				ObjectInputStream ois=new ObjectInputStream(fis)){
			oos.writeObject(person);//serialization 
			
			Person rPerson=(Person) ois.readObject();//de serialization 
			while(rPerson!=null) {
				System.out.println("ReadFmFile "+rPerson);
				rPerson=(Person)ois.readObject();
			}
			
			
//			System.out.println("Original "+person);				
//			System.out.println("person.equals(rPerson) "+person.equals(rPerson));
//			System.out.println("person== rPerson "+(person==rPerson));
			
		}catch(IOException exception) {
			System.err.println(exception.getMessage());
			exception.printStackTrace();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		
//		try(FileInputStream fis=new FileInputStream("person.dat");
//				ObjectInputStream ois=new ObjectInputStream(fis)){
//					
//			Person rPerson=(Person) ois.readObject();//de serialization 
//			
//			System.out.println("Original "+person);
//			System.out.println("ReadFmFile "+rPerson);	
//			System.out.println("person.equals(rPerson) "+person.equals(rPerson));
//			System.out.println("person== rPerson "+(person==rPerson));
//			
//		}catch(IOException exception) {
//			System.err.println(exception.getMessage());
//			exception.printStackTrace();
//		} catch (ClassNotFoundException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
	